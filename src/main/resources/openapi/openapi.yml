openapi: 3.0.2
info:
    title: "OpenAPi Demo"
    description: "OpenApi demo with springboot"
    termsOfService: http://swagger.io./terms/
    contact:
        email: dhyego.nieto@gmail.com
    license:
        name: Apache 2.0
        url:  http://www.apache.org/licenses/LICENSE-2.0.html
    version: 0.0.1-SNAPSHOT
tags:
    - name: user
      description: Operations about user
      externalDocs:
          description: Find out more about it
          url: http://swagger.io
paths:
    /users:
        post:
            tags: ["create-user"]
            summary: Create user
            description: Creates user functionality
            operationId: createUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: ""
                required: true
            responses:
                '201':
                    description: User created succesfully
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
        get:
            tags: ["get-user"]
            summary: Get users
            description: Get all users from DB
            operationId: getUsers
            responses:
                '200':
                    description: All user retrieved successfully
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                type: object
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                '403':
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                type: object
                '409':
                    description: Conflict
                    content:
                        application/json:
                            schema:
                                type: object
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                type: object
components:
    schemas:
        UserDTO:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                    description: User's name
                lastname:
                    type: string
                    description: User's lastname
                document:
                    type: integer
                    format: int64
                status:
                    type: object
                    description: User status
                    $ref: "#/components/schemas/UserStatus"
        UserStatus:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
